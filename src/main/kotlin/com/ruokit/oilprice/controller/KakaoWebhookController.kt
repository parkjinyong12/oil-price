package com.ruokit.oilprice.controller

import com.ruokit.oilprice.kakao.KakaoRequest
import com.ruokit.oilprice.kakao.KakaoResponse
import com.ruokit.oilprice.service.GasStationQueryService
import com.ruokit.oilprice.service.OilPriceService
import org.springframework.http.ResponseEntity
import org.springframework.web.bind.annotation.PostMapping
import org.springframework.web.bind.annotation.RequestBody
import org.springframework.web.bind.annotation.RestController

@RestController
class KakaoWebhookController(
    private val gasStationQueryService: GasStationQueryService
) {

    @PostMapping("/webhook")
    fun kakaoWebhook(@RequestBody request: KakaoRequest): ResponseEntity<KakaoResponse> {
        val address = request.userRequest.utterance

        // Ï£ºÏÜå Í∏∞Î∞òÏúºÎ°ú Ï£ºÏú†ÏÜå Ï°∞Ìöå
        val stations = gasStationQueryService.findNearbyStations(address, 2.0)

        if (stations.isEmpty()) {
            return ResponseEntity.ok(
                simpleText("‚ùó Ï£ºÏú†ÏÜå Ï†ïÎ≥¥Î•º Ï∞æÏùÑ Ïàò ÏóÜÏñ¥Ïöî. Ï£ºÏÜåÎ•º Îã§Ïãú ÌôïÏù∏Ìï¥ Ï£ºÏÑ∏Ïöî.")
            )
        }

        // ÏµúÏ†ÄÍ∞Ä Í∏∞Ï§Ä Ï†ïÎ†¨ ÌõÑ ÏÉÅÏúÑ 5Í∞úÎßå ÏÑ†ÌÉù
        val topStations = stations.sortedBy { it.price }.take(5)

        val stationListText = topStations.joinToString("\n") { station ->
            "‚õΩ ${station.stationName} - ${station.price}Ïõê"
        }

        return ResponseEntity.ok(
            simpleText("üìç [$address] Ïù∏Í∑º ÏµúÏ†ÄÍ∞Ä Ï£ºÏú†ÏÜå\n\n$stationListText")
        )
    }

    private fun simpleText(text: String): Map<String, Any> {
        return mapOf(
            "version" to "2.0",
            "template" to mapOf(
                "outputs" to listOf(
                    mapOf("simpleText" to mapOf("text" to text))
                )
            )
        )
    }
}